#Â to specify the docker registry when not using Jenkins
dockerRegistry: "gcr.io"

JXBasicAuth: admin:$apr1$a/HdTrV7$XYCGJWF9PdVwVVTvjMyaU/

extensions:
  enabled: true
teamRoles:
  viewer:
    enabled: true
  team-admin:
    enabled: true


BuildPacks:
  "classic-workloads":
     Label: "Library Workloads: CI+Release but no CD"
     GitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-classic.git"
     GitRef: "master"
  "kubernetes-workloads":
     Label: "Kubernetes Workloads: Automated CI+CD with GitOps Promotion"
     GitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes.git"
     GitRef: "master"

gcpreviews:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0 */3 * * *"
  args:
    - "gc"
    - "previews"
    - "--batch-mode"
  image:
    repository: gcr.io/jenkinsxio/builder-go
    tag: 0.1.402
  role:
    enabled: true
    rules:
      - apiGroups:
          - jenkins.io
        resources:
          - environments
        verbs:
          - list
          - get
          - update
          - delete
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - list
          - get
          - watch
  clusterrole:
    enabled: true
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - get
          - list
          - delete
      - apiGroups:
          - ""
        resources:
          - pods
          - pods/portforward
        verbs:
          - get
          - delete
          - list
          - create

gcactivities:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "activities"
  - "--batch-mode"
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - list
      - delete
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      - services
      verbs:
      - get
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - delete
      - list
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get

gcpods:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "pods"
  - "--batch-mode"
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - delete
      - list

postinstalljob:
  enabled: false
  serviceaccount:
    enabled: true
  job:
    enabled: true
    annotations:
      helm.sh/hook: post-install,post-upgrade
      helm.sh/hook-delete-policy: hook-succeeded
  args:
  - "step"
  - "post"
  - "install"
  - "--batch-mode"
  role:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      - secrets
      - services
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - get
      - list
      - watch
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch

controllerworkflow:
  enabled: true
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "workflow"
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - list
      - get
      - watch
      - create
      - update
    - apiGroups:
      - jenkins.io
      resources:
      - workflows
      - environments
      verbs:
      - list
      - get
      - watch
    - apiGroups:
      - ""
      resources:
      - services
      - secrets
      verbs:
      - list
      - get

controllerbuild:
  enabled: false
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "build"
  - "--batch-mode"
  - "--git-credentials"
  - "--verbose"
  image:
    repository: gcr.io/jenkinsxio/builder-go
    tag: 0.1.402
  env:
    GIT_AUTHOR_NAME: "jenkins-x-bot"
    GIT_AUTHOR_EMAIL: "jenkins-x@googlegroups.com"
    XDG_CONFIG_HOME: "/home/jenkins"
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
      - list
    - apiGroups:
      - tekton.dev
      resources:
      - pipelines
      - pipelinereources
      - pipelineruns
      - tasks
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get
      - list
      - watch
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      - pipelinestructures
      - sourcerepositories
      verbs:
      - list
      - get
      - watch
      - create
      - update
      - patch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - pods
      - pods/log
      - secrets
      verbs:
      - get
      - list
      - watch

controllercommitstatus:
  enabled: true
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "commitstatus"
  - "--verbose"
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - commitstatuses
      verbs:
      - get
      - create
      - update
      - watch
      - list
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - get
      - update
    - apiGroups:
      - ""
      resources:
      - pods
      - secrets
      - configmaps
      verbs:
      - watch
      - list
      - get

controllerrole:
  enabled: true
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "role"
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      - extensions
      - apps
      - rbac.authorization.k8s.io
      - batch
      - jenkins.io
      resources:
      - "*"
      - "pods/*"
      verbs:
      - list
      - get
      - watch
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - environmentrolebindings
      verbs:
      - list
      - get
      - watch
      - create
      - update

controllerteam:
  enabled: true
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  env:
    GIT_AUTHOR_NAME: "jenkins-x-bot"
    GIT_AUTHOR_EMAIL: "jenkins-x@googlegroups.com"
    XDG_CONFIG_HOME: "/home/jenkins"
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "team"
  image:
    repository: gcr.io/jenkinsxio/builder-go
    tag: 0.1.402
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - watch
      - list
      - create
      - update
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - update
      - list
    - apiGroups:
      - jenkins.io
      resources:
      - teams
      - users
      verbs:
      - list
      - get
      - watch
      - update
    - apiGroups:
      - jenkins.io
      resources:
      - users
      verbs:
      - list
      - get
      - watch
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - teams
      - users
      verbs:
      - list
      - get
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - list
      - get
      - watch
      - create
      - update
    - apiGroups:
      - ""
      resources:
      - configmaps
      - persistentvolumeclaims
      - secrets
      - serviceaccounts
      - services
      verbs:
      - list
      - watch
      - get
      - create
      - update
      - delete
    - apiGroups:
      - "extensions/v1beta1"
      resources:
      - deployments
      verbs:
      - list
      - watch
      - get
      - create
      - update
      - delete
    - apiGroups:
      - "rbac.authorization.k8s.io/v1"
      resources:
      - roles
      - rolebindings
      verbs:
      - list
      - watch
      - get

prow:
  pipelinecontroller:
    enabled: true
  buildnum:
    enabled: true
  sinker:
    replicaCount: 0

chartmuseum:
  enabled: true
  service:
    annotations:
      fabric8.io/expose: "true"
      fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
  persistence:
    enabled: true
    AccessMode: ReadWriteOnce
    Size: 8Gi
  env:
    open:
      AUTH_ANONYMOUS_GET: true
      DISABLE_API: false
    secret:
      BASIC_AUTH_USER: admin
      BASIC_AUTH_PASS: admin
  image:
    tag: v0.7.1
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 160m
      memory: 128Mi

chartmuseumServiceLink:
  enabled: false

  # specify the external name here for where the chartmuseum should be
  externalName: ""